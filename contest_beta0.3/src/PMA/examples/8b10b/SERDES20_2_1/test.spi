***  Written by Yury Audzevich
*** 
***  Comments, suggestions for improvement and criticism welcome
***  E-mail:  yury.audzevich~at~cl.cam.ac.uk
*** 
*** 
***  Copyright 2003-2013, University of Cambridge, Computer Laboratory. 
***  Copyright and related rights are licensed under the Hardware License, 
***  Version 2.0 (the "License"); you may not use this file except in 
***  compliance with the License. You may obtain a copy of the License at
***  http://www.cl.cam.ac.uk/research/srg/netos/greenict/projects/contest/. 
***  Unless required by applicable law or agreed to in writing, software, 
***  hardware and materials distributed under this License is distributed 
***  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
***  either express or implied. See the License for the specific language
***  governing permissions and limitations under the License.
*** 
***

***** HSPICE simulation using standard cell designs *****

***** 45nm predictive technology model (FreePDK v1.4)  Typical conditions, 1.1V, 25C *****
.include "/usr/groups/ecad/kits/commercial45_v2010_12/n45-hspice-model-TT_1V10_25.spi"

***** Standard cells netlist *****
.include "/usr/groups/ecad/kits/commercial45_v2010_12/n45-library-netlist-noparasitics.spi"

*************** OPTIONS ****************
.option post
.option nomod
.option co=255
.option dcon=1
.option lis_new=1

***** Optionally probe only the signals that are required to speed up simulation *****
.probe V(pvp*) V(pvn*) V(pvdd*)
.probe V(VDD*) V(VSS*)
.probe V(c*) V(o*)
.probe V(DATA*)
.probe V(RESET*)
.probe V(SERIAL*)
.probe V(PARALLEL*)

*************** LIMITS ****************
**** setup simulation limits ****
.tran FROM_TS TO_TS

*************** NETLISTS ****************
***** Drive inputs using stimulus in "test.dsi"
.include "tempdir.stimulus/test-stim.sp"

***** Import, instantiate and power up all synth.-ed && custom.-designed netlists
*** MCML
.include "MCML_composite_cells.sp"
.include "MCML_basic_cells.sp"
*** CMOS
.include "P2021220.instantiation.spi"
.include "PISO20_2.spi"
.include "SIPO2_20.spi"
*** params
.include "params_cells.spi"

***** Power Measurements - auto-generated *****
*** MCML power - auto generated
.include "power_mcml_voltage.spi"

*** custom meas. netlist  
*.include "power.custom/POWER_SER_MCML.spi"
*.include "power.custom/POWER_DES_MCML.spi" 

*** CMOS power - auto generated
.include "power_cmos_voltage.spi"

*** custom meas. netlist
*.include "power.custom/POWER_SER_CMOS.spi"
*.include "power.custom/POWER_DES_CMOS.spi"

************* POWER SUPPLIES ***************
*** === INTERCONNECT CMOS & MCML === ***
Vpdd_cmos_in pvdd_cmos_in 0 DC CMOS_VDD_LEVEL
Vgnd_all_in gnda_in 0 CMOS_VSS_LEVEL

***  === CMOS SERDES === ***
*** vdd - PISO && SIPO
Vdd_ser_cmos  VDD_PISO20_2 0 CMOS_VDD_LEVEL
Vdd_des_cmos  VDD_SIPO2_20 0 CMOS_VDD_LEVEL
*** vss - PISO && SIPO
Vss_ser_cmos  VSS_PISO20_2 0 CMOS_VSS_LEVEL
Vss_des_cmos  VSS_SIPO2_20 0 CMOS_VSS_LEVEL

*** === MCML SERDES === ***
*** CMOS levels in MCML blocks
*** vdd  
Vpdd_cmos_s pvdd_cmos_ser 0 DC CMOS_VDD_LEVEL
Vpdd_cmos_d pvdd_cmos_des 0 DC CMOS_VDD_LEVEL

*** MCML levels in MCML blocks
*** vdd 
Vpdd_mcmls pvdd_mcmls 0 DC MCML_VDD_LEVEL
Vpdd_mcmld pvdd_mcmld 0 DC MCML_VDD_LEVEL
*** vss 
Vgnd_alls gnda_s 0 CMOS_VSS_LEVEL
Vgnd_alld gnda_d 0 CMOS_VSS_LEVEL

*** CMOS-MCML-CMOS conversion & biasing
*** ser
Vpvp_convs pvp_convs 0 DC CONV_P_BIAS_VOLTAGE
Vpvn_convs pvn_convs 0 DC CONV_N_BIAS_VOLTAGE
*** des
Vpvp_convd pvp_convd 0 DC CONV_P_BIAS_VOLTAGE
Vpvn_convd pvn_convd 0 DC CONV_N_BIAS_VOLTAGE

*** MCML Single level logic
*** ser
Vpvp_invs pvp_invs 0 DC SLL_P_BIAS_VOLTAGE
Vpvn_invs pvn_invs 0 DC SLL_N_BIAS_VOLTAGE
*** des
Vpvp_invd pvp_invd 0 DC SLL_P_BIAS_VOLTAGE
Vpvn_invd pvn_invd 0 DC SLL_N_BIAS_VOLTAGE

*** MCML Double level logic
*** ser
Vpvp_dlas pvp_dlas 0 DC DLL_P_BIAS_VOLTAGE
Vpvn_dlas pvn_dlas 0 DC DLL_N_BIAS_VOLTAGE
*** des
Vpvp_dlad pvp_dlad 0 DC DLL_P_BIAS_VOLTAGE
Vpvn_dlad pvn_dlad 0 DC DLL_N_BIAS_VOLTAGE


