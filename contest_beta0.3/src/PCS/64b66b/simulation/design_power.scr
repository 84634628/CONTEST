# Written by Yury Audzevich
#
# Comments, suggestions for improvement and criticism welcome
# E-mail:  yury.audzevich~at~cl.cam.ac.uk
#
#
# Copyright 2003-2013, University of Cambridge, Computer Laboratory. 
# Copyright and related rights are licensed under the Hardware License, 
# Version 2.0 (the "License"); you may not use this file except in 
# compliance with the License. You may obtain a copy of the License at
# http://www.cl.cam.ac.uk/research/srg/netos/greenict/projects/contest/. 
# Unless required by applicable law or agreed to in writing, software, 
# hardware and materials distributed under this License is distributed 
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language
# governing permissions and limitations under the License.
#
#

#### Setup the environment. Enable the power analysis mode. ####
set power_enable_analysis TRUE
##set power_ui_backward_compatibility TRUE

### Define library paths ###
set KITS /usr/groups/ecad/kits
set COM45 ${KITS}/commercial45_v2010_12

### Define search path ###
set search_path [concat $search_path verilog ${COM45}]

### Define libraries ###
set link_library [list "*" "${COM45}/n45-library-timing-TT_1V10_25.ccsdb" ]
set target_library ${COM45}/n45-library-timing-TT_1V10_25.ccsdb
set synthetic_library "dw_foundation.sldb"


### Route gate-level netlist into PrimeTime PX ###
read_db $target_library
read_verilog "../synthesis/out.synth/small_async_fifo.v"
current_design "small_async_fifo"
link

#### Time-based power analysis takes the vcd format as an input, ####
#### builds waveforms and runs the final power report.     	 ####		
## module 1 afifo --> instance afifo_tx
set power_analysis_mode "time_based"
read_vcd "./afifo_tx.vcd" -strip_path tb_pcs/afifo_tx
report_switching_activity -list_not_annotated

### dump output - module 1 ###
# create_power_waveforms -output vcd -format out
report_power > circuit_power.txt


### module 2 encoder_64B66B
read_verilog "../synthesis/out.synth/encoder_64B66B.v"
current_design "encoder_64B66B"
link

#### Time-based power analysis ####
set power_analysis_mode "time_based"
read_vcd "./encode_words.vcd" -strip_path tb_pcs/encode_words
report_switching_activity -list_not_annotated

### dump output - module 2 ###
# create_power_waveforms -output vcd -format out
report_power >> circuit_power.txt

exit
